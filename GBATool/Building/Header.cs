using System.IO;
using System.Text;
using System.Threading.Tasks;

namespace GBATool.Building
{
    static class Header
    {
        private static readonly string FileName = "header.asm";

        public static async Task<bool> Generate(string outputSourcePath)
        {
            string filePath = Path.Combine(outputSourcePath, FileName);

            try
            {
                if (File.Exists(filePath))
                {
                    File.Delete(filePath);
                }
            }
            catch 
            {
                return false;
            }

            try
            {
                using (FileStream sourceStream = new(filePath, FileMode.Create, FileAccess.Write, FileShare.None, bufferSize: 4096, useAsync: true))
                {
                    StringBuilder sb = new();
                    sb.AppendLine("; This file is autogenerated!");
                    sb.AppendLine("");
                    sb.AppendLine(".space 178                          ; Logo (omitted) + Program name");
                    sb.AppendLine(".byte 0x96                          ; Fixed value");
                    sb.AppendLine(".space 49                           ; Dummy Header");

                    UTF8Encoding utf8 = new();
                    byte[] encodedText = utf8.GetBytes(sb.ToString());

                    await sourceStream.WriteAsync(encodedText).ConfigureAwait(false);
                };

                return true;
            }
            catch
            {
                return false;
            }
        }
    }
}
